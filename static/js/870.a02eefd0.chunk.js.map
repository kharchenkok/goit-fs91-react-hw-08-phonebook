{"version":3,"file":"static/js/870.a02eefd0.chunk.js","mappings":"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","sources":["webpack://goit-fs91-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","store/contacts/contactsSelectors.js","webpack://goit-fs91-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/NameFilter.jsx","webpack://goit-fs91-react-hw-08-phonebook/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","utils/RandomColorFromOptions.js","webpack://goit-fs91-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.js","pages/ContactsPage/ContactsPage.js","utils/ToastNotification.js","webpack://goit-fs91-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"section__title\":\"Section_section__title__5once\"};","import React from 'react';\nimport cx from 'classnames';\nimport style from './Section.module.css';\n\nconst Section = ({ title, children, extraClass = '' }) => {\n  const sectionClasses = cx(style.section, extraClass);\n\n  return (\n    <section className={sectionClasses}>\n      {title && <h2 className={style.section__title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\nexport default Section;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const filterSelector = state => state.filter.nameFilter;\n\nexport const selectContacts = state => state.contacts.contacts;\n\nconst sortedContacts = createSelector(\n  [selectContacts],\n  contacts => contacts && contacts.slice().toSorted((a, b) => b.id - a.id)\n);\n\nconst filteredNameContacts = createSelector(\n  [sortedContacts, filterSelector],\n  (contacts, nameFilter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(nameFilter.toLowerCase())\n    );\n  }\n);\n\nconst isLoadingContacts = state => state.contacts.isLoading;\n\nconst errorContacts = state => state.contacts.error;\n\nexport const contactsSelectors = {\n  selectContacts,\n  sortedContacts,\n  isLoadingContacts,\n  errorContacts,\n  filteredNameContacts,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"colorFilter\":\"Filter_colorFilter__ww+9v\",\"colorFilterButton\":\"Filter_colorFilterButton__6w+uE\",\"active\":\"Filter_active__IaDX0\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setNameFilterAction } from '../../store/filter/filterSlice';\n\nimport {\n  contactsSelectors,\n  filterSelector,\n} from '../../store/contacts/contactsSelectors';\n\nimport style from './Filter.module.css';\n\nconst NameFilter = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.sortedContacts);\n  const nameFilter = useSelector(filterSelector);\n\n  const handleChange = event => {\n    dispatch(setNameFilterAction(event.target.value));\n  };\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <input\n          className={style.filter}\n          type=\"text\"\n          value={nameFilter}\n          placeholder={'Find contacts by name'}\n          onChange={handleChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport default NameFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"Notification_notification__SfISU\"};","import React from 'react';\nimport style from './Notification.module.css';\n\nconst Notification = ({ text }) => {\n  return <div className={style.notification}>{text}</div>;\n};\nexport default Notification;\n","const colorPickerOptions = [\n  { label: 'yellow', color: '#faae20' },\n  { label: 'green', color: '#4CAF50' },\n  { label: 'blue', color: '#2196F3' },\n  { label: 'pink', color: '#E91E63' },\n];\n\nexport function getRandomColorFromOptions() {\n  const randomIndex = Math.floor(Math.random() * colorPickerOptions.length);\n  return colorPickerOptions[randomIndex].color;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactDelButton\":\"ContactList_contactDelButton__eePj0\",\"nameIcon\":\"ContactList_nameIcon__5BSnI\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { BiSolidUserRectangle, BiPhone } from 'react-icons/bi';\n\nimport Notification from '../Notification';\nimport { showError, showInfo } from '../../utils/ToastNotification';\nimport { contactsSelectors } from '../../store/contacts/contactsSelectors';\nimport {\n  deleteContact,\n  fetchContacts,\n} from '../../store/contacts/contactsOperations';\nimport { getRandomColorFromOptions } from '../../utils/RandomColorFromOptions';\n\nimport style from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(contactsSelectors.sortedContacts);\n  const filteredContacts = useSelector(contactsSelectors.filteredNameContacts);\n  const error = useSelector(contactsSelectors.errorContacts);\n  const isLoading = useSelector(contactsSelectors.isLoadingContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = (id, name) => {\n    dispatch(deleteContact(id));\n    if (error) {\n      showError(`Error while deleting contact`);\n      return;\n    }\n    showInfo(`Contact ${name} deleted`);\n  };\n\n  if (isLoading && contacts.length === 0) {\n    return <Notification text={'Loading...'} />;\n  }\n\n  if (error) {\n    return (\n      <Notification\n        text={`Error (${error}) while loading contacts. Please try again later.`}\n      />\n    );\n  }\n  return (\n    <div>\n      {filteredContacts.length > 0 && contacts.length > 0 ? (\n        <ul className={style.contactList}>\n          {filteredContacts.map(({ id, name, number }) => (\n            <li key={id} className={style.contactItem}>\n              <p>\n                <BiSolidUserRectangle\n                  style={{ color: getRandomColorFromOptions() }}\n                  className={style.nameIcon}\n                />\n                {name}\n              </p>\n              <p>\n                <BiPhone />\n                {number}\n              </p>\n              <button\n                type={'button'}\n                onClick={() => handleDelete(id, name)}\n                className={style.contactDelButton}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <Notification text={'No contacts in the list'} />\n      )}\n    </div>\n  );\n};\nexport default ContactList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  showError,\n  showSuccess,\n  showWarning,\n} from '../../utils/ToastNotification';\n\nimport { addContact } from '../../store/contacts/contactsOperations';\nimport { contactsSelectors } from '../../store/contacts/contactsSelectors';\nimport style from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.sortedContacts);\n  const error = useSelector(contactsSelectors.errorContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = event.target;\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.value.toLowerCase()\n    );\n\n    if (!name.value.trim() || !number.value.trim()) {\n      showError('Make sure all fields are completed!');\n      return;\n    }\n\n    if (existingContact) {\n      showWarning(`${name.value} is already in contacts!`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: name.value,\n        number: number.value,\n      })\n    );\n\n    if (error) {\n      showError('Error adding contact.');\n      return;\n    }\n\n    showSuccess(`${name.value} added to contacts!`);\n\n    event.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.form}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder={'Name'}\n        required\n        className={style.formInput}\n      />\n\n      <input\n        type=\"tel\"\n        name=\"number\"\n        placeholder={'Phone number'}\n        required\n        className={style.formInput}\n      />\n\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n}\n","import Section from '../../components/Section';\nimport NameFilter from '../../components/Filter';\nimport ContactList from '../../components/ContactList';\nimport ContactForm from '../../components/ContactForm';\n\nconst ContactsPage = () => {\n  return (\n    <div className={'wrapper'}>\n      <Section>\n        <NameFilter />\n        <ContactList />\n      </Section>\n\n      <Section title={'Add new contact'}>\n        <ContactForm />\n      </Section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","import { toast } from 'react-toastify';\n\nexport function showError(message) {\n  toast.error(message, {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n}\n\nexport function showWarning(message) {\n  toast.warn(message, {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n}\nexport function showSuccess(message) {\n  toast.success(message, {\n    position: 'top-center',\n    autoClose: 1000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n}\nexport function showInfo(message) {\n  toast.info(message, {\n    position: 'top-center',\n    autoClose: 1000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formLinkText\":\"ContactForm_formLinkText__l4wUu\"};"],"names":["_ref","title","children","_ref$extraClass","extraClass","sectionClasses","cx","style","_jsxs","className","_jsx","filterSelector","state","filter","nameFilter","selectContacts","contacts","sortedContacts","createSelector","slice","toSorted","a","b","id","contactsSelectors","isLoadingContacts","isLoading","errorContacts","error","filteredNameContacts","contact","name","toLowerCase","includes","dispatch","useDispatch","useSelector","_Fragment","length","type","value","placeholder","onChange","event","setNameFilterAction","target","text","colorPickerOptions","label","color","getRandomColorFromOptions","randomIndex","Math","floor","random","filteredContacts","useEffect","fetchContacts","Notification","concat","map","number","BiSolidUserRectangle","BiPhone","onClick","deleteContact","showError","showInfo","handleDelete","ContactForm","onSubmit","preventDefault","_event$target","existingContact","find","trim","showWarning","addContact","showSuccess","reset","required","Section","NameFilter","ContactList","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme"],"sourceRoot":""}